// Import Date Conversions
import { convertDate, date } from "./utils";

// Define Endpoint Parameter Variables
let zip_code = 80831;

// Declare Image Variables
const sunny = "img/sunny.png";
const cloudy = "img/cloudy.png";
const rainy = "img/rain.png";
const snowy = "img/snow.png";

// Make two API calls to grab the geolocation and forecast data
function getWeather(zipcode) {
  const geoReq = new XMLHttpRequest();
  geoReq.open(
    "GET",
    `https://se-weather-api.herokuapp.com/api/v1/geo?zip_code=${zipcode}`
  );
  geoReq.send();
  geoReq.onload = (e) => {
    const current_date = date();
    const forecast = new XMLHttpRequest();
    const geoParse = JSON.parse(geoReq.responseText);
    forecast.open(
      "GET",
      `https://se-weather-api.herokuapp.com/api/v1/forecast?latitude=${geoParse.latitude}&longitude=${geoParse.longitude}&date=${current_date}`
    );
    forecast.send();
    return (forecast.onload = (e) => {
      let response = JSON.parse(forecast.responseText);
      // Establish Dates
      const day = [];
      const dayOfTheWeek = [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
      ];
      const dataOfDate = new Date();
      const weekdayNumber = dataOfDate.getDay();
      const weekday = dayOfTheWeek[weekdayNumber + i];

      for (let i = 0; i < 3; i++) {
        const lowTemperature = Math.round(
          forecastData.daily.data[i].temperatureLow
        );
        const highTemperature = Math.round(
          forecastData.daily.data[i].temperatureHigh
        );
        const icon = forecastData.daily.data[i].icon;
      }
      /*
        This HTML content is inside return function for forecast.onload currently. 
        I would love to move this outside of the weather function all together. 
        I think I just need to make a new variable to return the geoParse and response variables (to obtain their scoped api calls),
        OR take some time and splice-up the function into smaller sections.

        Setting the inner HTML content in this way helps me to visualize things a little better for short projects such as this!
        Absolutely down to generate through innerHTML or whatever means necessary.
      */
      const displayWeatherPage = `
      <section id="section-weather-forecast">
      <h1 class="forecast-title">Weather Forecast For ${geoParse.city}, ${geoParse.region}</h1>
      <div class="three-day-forecast-container">
          <div class="forecast">
              <h2 class="day-title">${weekday}</h2>
              <div class="weather">${icon}</div>
              <div class="forecast-data">
                  <span id="temperature-high">${highTemperature}</span>
                  <span id="temperature-low">${lowTemperature}</span>
              </div>
          </div>
          <div class="forecast">
              <h2 class="day-title">${weekday}</h2>
              <div class="weather">${icon}</div>
              <div class="forecast-data">
                  <span id="temperature-high">${highTemperature}</span>
                  <span id="temperature-low">${lowTemperature}</span>
              </div>
          </div>
          <div class="forecast">
              <h2 class="day-title">${weekday}</h2>
              <div class="weather">${icon}</div>
              <div class="forecast-data">
                  <span id="temperature-high">${highTemperature}</span>
                  <span id="temperature-low">${lowTemperature}</span>
              </div>
          </div>
      </div>
      </section>
        
          
      `;
      document.write(`${displayWeatherPage}`);
    });
  };
}

console.log(getWeather("80831"));
getWeather("80831");

/*
    TODO: 
    I see [i] is not defined, so I would need to set logic to detect day,
    then check icon for each day and grab the right image accordingly...
    maybe something like this:
    response.daily.data.forEach(day ... )
    if (day.icon === "sunny") {
        const icon = require("/sunny.png");
    } else if (day.icon === "rainy") {
    const icon = require("/rainy.png");
    }
    const icon = require("img/rain.png");

    Add more styling to match the creative generated by Roger and the team at Movable Ink.
*/
